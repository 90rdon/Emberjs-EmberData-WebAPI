{"version":3,"file":"server/hunter-warfield.WebAPI/Scripts/app.js","sources":["app/app.coffee","app/controllers/contactController.coffee","app/controllers/contactsController.coffee","app/controllers/debtorController.coffee","app/controllers/debtorsController.coffee","app/controllers/employmentController.coffee","app/controllers/employmentsController.coffee","app/controllers/helpers/columnItemController.coffee","app/controllers/helpers/columnSorterController.coffee","app/controllers/helpers/editObjectController.coffee","app/controllers/indexController.coffee","app/controllers/lookupDataController.coffee","app/controllers/noteController.coffee","app/controllers/notesController.coffee","app/controllers/personController.coffee","app/controllers/personsController.coffee","app/helpers/datePicker.coffee","app/helpers/handlebarsHelpers.coffee","app/initialize.coffee","app/models/actionCode.coffee","app/models/cancellation.coffee","app/models/client.coffee","app/models/contact.coffee","app/models/country.coffee","app/models/debtor.coffee","app/models/employment.coffee","app/models/note.coffee","app/models/person.coffee","app/models/phoneTypes.coffee","app/models/relationship.coffee","app/models/resultCode.coffee","app/routes/contactRoute.coffee","app/routes/contactsRoute.coffee","app/routes/debtorRoute.coffee","app/routes/indexRoute.coffee","app/store/RESTfulAdapter.coffee","app/store/fixtureAdapter.coffee","app/store/webapi/adapter.coffee","app/store/webapi/serializer.coffee","app/templates/_cancellation.emblem","app/templates/_confirmation.emblem","app/templates/_well.emblem","app/templates/about.emblem","app/templates/application.emblem","app/templates/contact.emblem","app/templates/contact/_edit.emblem","app/templates/contactDetail.emblem","app/templates/contacts.emblem","app/templates/datepicker.emblem","app/templates/debtor.emblem","app/templates/debtor/_edit.emblem","app/templates/debtorDetail.emblem","app/templates/employment.emblem","app/templates/employment/_edit.emblem","app/templates/employments.emblem","app/templates/empty.emblem","app/templates/index.emblem","app/templates/modal_layout.emblem","app/templates/note.emblem","app/templates/notes.emblem","app/templates/person.emblem","app/templates/person/_edit.emblem","app/templates/persons.emblem","app/views/confirmationView.coffee","app/views/contactView.coffee","app/views/contactsListView.coffee","app/views/datePickerField.coffee","app/views/debtorsListView.coffee","app/views/modalView.coffee","app/views/scrollView.coffee"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlCA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7BA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9CA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtCA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/BA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhCA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlCA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhdA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1BA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnCA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjCA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnDA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhJA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AAJA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;;ACAA;AAAA;AACA;AACA;AACA;AAHA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3DA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzBA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxCA;;ACAA;AAAA;AACA;AACA;AACA;AAHA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AAJA;;ACAA;AAAA;AACA;AADA;;ACAA;AAAA;AACA;AADA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAznHA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApDA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnCA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7FA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7BA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7GA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5HA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApNA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5CA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdlbA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlrGA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdjLA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/GA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9BA;;ACAA;AAAA;AACA;AADA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzDA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBA;;ACAA;AAAA;AACA;AADA","sourcesContent":["# Application bootstrapper\n\nmodule.exports = Em.Application.create\n  LOG_TRANSITIONS:  true\n\n  # web API\n  serverUrl:        'http://10.211.55.4'\n  serverNamespace:  'hunter-warfield/api'\n  paymentPostingUrl:'http://paymentposting.hunterwarfield.com'","App.ContactController = App.EditObjectController.extend\n  needs: [\n    'debtor'\n    'countries'\n    'phoneTypes'\n    'phoneStatuses'\n    'sources'\n    'yesNo'\n  ]\n\n  isConfirming: false\n\n  setSelections: ->\n    @get('controllers.countries').setSelectedByIdStr(@get('country'))\n    @get('controllers.phoneTypes').setSelectedById(@get('type'))\n    @get('controllers.phoneStatuses').setSelectedById(@get('status'))\n    @get('controllers.sources').setSelectedById(@get('source'))\n    @get('controllers.yesNo').setSelectedById(@get('consent'))\n\n  getSelections: ->\n    @set('country', @get('controllers.countries').getSelectedId())\n    @set('type', @get('controllers.phoneTypes').getSelectedId())\n    @set('status', @get('controllers.phoneStatuses').getSelectedId())\n    @set('source', @get('controllers.sources').getSelectedId())\n    @set('consent', @get('controllers.yesNo').getSelectedId())\n\n  labelPhoneType: (->\n    type = @get('controllers.phoneTypes').findProperty('id', @get('type'))\n    return null   if type == null || type == undefined\n    type.label\n  ).property('type')\n\n  labelPhoneStatus: (->\n    status = @get('controllers.phoneStatuses').findProperty('id', @get('status'))\n    return null   if status == null || status == undefined\n    status.label\n  ).property('status')","App.ContactsController = App.ColumnSorterController.extend\n  needs: [\n    'debtor'\n    'contact'\n    'phoneTypes'\n  ]\n\n  itemController: 'contact'\n\n  columns: (-> [\n    Em.Object.create(column: 'phone')\n    Em.Object.create(column: 'extension')\n    Em.Object.create(column: 'type')\n    # Em.Object.create(column: 'score')\n    # Em.Object.create(column: 'source')\n    Em.Object.create(column: 'status')\n  ]).property()\n\n  create: ->\n    transaction = @get('store').transaction()\n    @transitionToRoute 'contact', transaction.createRecord(App.Contact, 'debtor': @get('controllers.debtor').content, 'debtorId': @get('controllers.debtor').content.id)\n\n  delete: (item) ->\n    item.deleteRecord()\n    @get('store').commit()\n\n ","App.DebtorController = App.EditObjectController.extend\n  needs: [\n    'contacts'\n    'employments'\n    'persons'\n    'notes'\n    'countries'\n    'consumerFlags'\n    'titles'\n    'suffixes'\n    'validInvalid'\n    'yesNo'\n    'actionCodes'\n    'resultCodes'\n  ]\n    \n  setSelections: ->\n    @get('controllers.consumerFlags').setSelectedById(@get('type'))\n    @get('controllers.titles').setSelectedById(@get('title'))\n    @get('controllers.suffixes').setSelectedById(@get('suffix'))\n    @get('controllers.validInvalid').setSelectedById(@get('emailValidity'))\n    @get('controllers.yesNo').setSelectedById(@get('optIn'))\n    @get('controllers.countries').setSelectedById(@get('country'))\n\n  getSelections: ->\n    @set('type', @get('controllers.consumerFlags').getSelectedId())\n    @set('title', @get('controllers.titles').getSelectedId())\n    @set('suffix', @get('controllers.suffixes').getSelectedId())\n    @set('emailValidity', @get('controllers.validInvalid').getSelectedId())\n    @set('optIn', @get('controllers.yesNo').getSelectedId())\n    @set('country', @get('controllers.countries').getSelectedId())\n\n  back: ->\n    @set('isEditing', false)\n    @transitionToRoute 'index'\n\n  makePayment: ->\n    window.open App.paymentPostingUrl\n\n  toCancel: false\n  confirmationNumber: null\n\n  sendCancellation: ->\n    @set('toCancel', false)\n    $.ajax\n      url: '/api/cancellation'\n      dataType: 'json'\n      type: 'POST'\n      data:\n        actionCode: 13\n        resultCode: 21\n      success: (response) ->\n        @set('confirmationNumber', response)\n\n  cancellation: ->\n    @toggleProperty('toCancel')","App.DebtorsController = App.ColumnSorterController.extend\n  columns: (-> [\n    Em.Object.create(column: 'id')\n    Em.Object.create(column: 'firstName')\n    Em.Object.create(column: 'middleName')\n    Em.Object.create(column: 'lastName')\n    Em.Object.create(column: 'address1')\n    Em.Object.create(column: 'address2')\n    Em.Object.create(column: 'city')\n    Em.Object.create(column: 'state')\n    Em.Object.create(column: 'zip')\n  ]).property()\n\n  loaded: (->\n    @get('filtered')\n  ).observes('@content.isLoaded')\n\n  filtering: (->\n    @get('filtered')\n  ).observes('search')\n\n  filtered: (->\n    regexp = new RegExp(@get('search'))\n    @get('content').filter (item) ->\n      regexp.test item.get('id')\n  ).property('search', 'content.@each.id')\n","App.EmploymentController = App.EditObjectController.extend\n  needs: [\n    'debtor'\n    'associations'\n    'employmentStatuses'\n    'countries'\n    'sources'\n  ]\n\n  setSelections: ->\n    @get('controllers.associations').setSelectedById(@get('association'))\n    @get('controllers.countries').setSelectedByIdStr(@get('country'))\n    @get('controllers.employmentStatuses').setSelectedById(@get('status'))\n    @get('controllers.sources').setSelectedById(@get('source'))\n\n  getSelections: ->\n    @set('country', @get('controllers.countries').getSelectedId())\n    @set('status', @get('controllers.employmentStatuses').getSelectedId())\n    @set('association', @get('controllers.associations').getSelectedId())\n    @set('source', @get('controllers.sources').getSelectedId())\n\n  labelEmploymentStatus: (->\n    status = @get('controllers.employmentStatuses').findProperty('id', @get('status'))\n    return null   if status == null || status == undefined\n    status.label\n  ).property('status')\n\n  labelSource: (->\n    source = @get('controllers.sources').findProperty('id', @get('source'))\n    return null   if source == null || source == undefined\n    source.label\n  ).property('source')","App.EmploymentsController = App.ColumnSorterController.extend\n  needs: [\n    'debtor'\n    'employment'\n  ]\n  columns: (-> [\n    Em.Object.create(column: 'name')\n    Em.Object.create(column: 'status')\n    Em.Object.create(column: 'source')\n    Em.Object.create(column: 'phone')\n    Em.Object.create(column: 'title')\n    Em.Object.create(column: 'hireDate')\n  ]).property()\n\n  create: ->\n    transaction = @get('store').transaction()\n    @transitionToRoute 'employment', transaction.createRecord(App.Employment, 'debtor': @get('controllers.debtor').content, 'debtorId': @get('controllers.debtor').content.id)\n\n  delete: (item) ->\n    item.deleteRecord()\n    @get('store').commit()","App.ColumnItemController = Em.ObjectController.extend\n  sortColumn:\n    Em.computed.alias('parentController.sortedColumn')\n  \n  sortAscending:\n    Em.computed.alias('parentController.sortAscending')\n  \n  sortDescending:\n    Em.computed.not('sortAscending')\n  \n  isSorted: (->\n    @get('sortColumn') is @get('column')\n  ).property('sortColumn', 'column')\n  \n  sortedAsc:\n    Em.computed.and('sortAscending', 'isSorted')\n  \n  sortedDesc:\n    Em.computed.and('sortDescending', 'isSorted')\n\n\n\n","App.ColumnSorterController = Em.ArrayController.extend\n  columns: []\n  \n  sortedColumn: (->\n    properties = @get('sortProperties')\n    return 'undefined'  unless properties\n    return properties.get 'firstObject'\n  ).property('sortProperties.[]')\n\n  toggleSort: (column) ->\n    if @get('sortedColumn') is column\n      @toggleProperty 'sortAscending'\n    else\n      @set('sortProperties', [column])\n      @set('sortAscending', true)","App.EditObjectController = Em.ObjectController.extend\n  isEditing: false\n\n  loaded: (->\n    @setSelections()\n  ).observes('@content.isLoaded')\n\n  dirtied: (->\n    if (@get('transaction') == null || @get('transaction') == undefined) && @get('isDirty') == true\n      @set('transaction', @get('store').transaction())\n  ).observes('isDirty')\n\n  edit: ->\n    @set('isEditing', true)\n    @setSelection\n\n  doneEditing: ->\n    @getSelections()\n    \n    if @get('transaction') != null || @get('transaction') == undefined\n      @get('transaction').commit()\n\n    @set('isEditing', false)\n    @transitionToRoute 'debtor'\n    \n  cancelEditing: ->\n    @setSelections()\n\n    if @get('transaction') != null || @get('transaction') == undefined\n      @get('transaction').rollback()\n\n    @set('isEditing', false)\n    @transitionToRoute 'debtor'\n\n  deleteItem: ->\n    console.log 'delete' + @get('id')\n\n  # showDeleteConfirmation: (item) ->\n  #   # @set('deleteConfirmation', App.ConfirmationView.create\n  #   #   id: '#popover' + @get('id')\n  #   #   title: ''\n  #   #   templateName: '_confirmation'\n  #   #   parentSelector: '#' + @get('id')\n  #   #   contentSelector: '#confirmation-content'\n  #   # .append()\n  #   # confirmationView = @get('deleteConfirmation')\n  #   # confirmationView)\n  #   # @get('deleteConfirmation').append()\n\n  #   # @set('deleteConfirmation', confirmationView)\n  #   # @get('deleteConfirmation').append()\n  #   # # @set('isConfirming', true)\n\n  # hideDeleteConfirmation: ->\n  #   # # @set('isConfirming', false)\n  #   # return null   if @get('deleteConfirmation') == null || @get('deleteConfirmation') == undefined\n  #   # @get('deleteConfirmation').remove()","App.IndexController = App.ColumnSorterController.extend\n  columns: (-> [\n    Em.Object.create({ column: 'id', label: 'debtorId' })\n    Em.Object.create({ column: 'fullName', label: 'name' })\n    Em.Object.create({ column: 'fullAddress', label: 'address' })\n  ]).property()\n\n  currentContent: Em.A([])\n\n  filterDebtors: (->\n    @get('filtered')\n  ).observes('search')\n\n  sorted: (->\n    result = Em.ArrayProxy.createWithMixins Em.SortableMixin, { content:@get('filteredContent'), sortProperties: @get('sortProperties'), sortAscending: @get('sortAscending') }\n    @set('currentContent', result)\n  ).observes('arrangedContent', 'sortAscending')\n\n  changed: (->\n    @get('filtered')\n  ).observes('content.@each')\n\n  filteredContent: (->\n    regexp = new RegExp(@get('search'))\n    result = @get('content').filter (item) ->\n      regexp.test item.get('id')\n  ).property('search', 'content.@each.id')\n\n  filtered: (->\n    result = Em.ArrayProxy.createWithMixins Em.SortableMixin, { content:@get('filteredContent'), sortProperties: @get('sortProperties'), sortAscending: @get('sortAscending') }\n    @set('currentContent', result)\n  ).observes('filteredContent')","App.LookupDataController = Em.ArrayController.extend\n  selected: null\n  \n  getSelectedId: ->\n    @get('selected.id')\n\n  getObjectById: (id) ->\n    @get('content').filterProperty('id', id).get('firstObject')\n\n  getLabelById: (id) ->\n    @get('content').filterProperty('id', id).get('firstObject.type')\n\n  setSelectedById: (id) ->\n    @set('selected', @getObjectById(id))\n\n# -----------------------------------------------------------------------------\n\nApp.ConsumerFlagsController = App.LookupDataController.extend\n  content: [\n    Em.Object.create({id: 'N', label: 'Consumer'}),\n    Em.Object.create({id: 'Y', label: 'Commerical'})\n  ]\n\nApp.TitlesController = App.LookupDataController.extend\n  content: [\n    Em.Object.create({id: 'Dr.'})\n    Em.Object.create({id: 'Miss'})\n    Em.Object.create({id: 'Mr.'})\n    Em.Object.create({id: 'Mrs.'})\n    Em.Object.create({id: 'Ms.'})\n    Em.Object.create({id: 'Prof'})\n  ]\n\nApp.SuffixesController = App.LookupDataController.extend\n  content: [\n    Em.Object.create({id: 'Jr.'})\n    Em.Object.create({id: 'Sr.'})\n    Em.Object.create({id: 'Esq.'})\n    Em.Object.create({id: 'I'})\n    Em.Object.create({id: 'II'})\n    Em.Object.create({id: 'III'})\n  ]\n\nApp.ValidInvalidController = App.LookupDataController.extend\n  content: [\n    Em.Object.create({id: 1, label: 'Valid'})\n    Em.Object.create({id: 2, label: 'Invalid'})\n  ]\n\nApp.YesNoController = App.LookupDataController.extend\n  content: [\n    Em.Object.create({id: 'Y', label: 'Yes'})\n    Em.Object.create({id: 'N', label: 'No'})\n  ]\n\nApp.PhoneTypesController = App.LookupDataController.extend\n  content: [\n    Em.Object.create({id: 0, label: 'Unknown'})\n    Em.Object.create({id: 1, label: 'Home'})\n    Em.Object.create({id: 2, label: 'Work'})\n    Em.Object.create({id: 3, label: 'Cell'})\n    Em.Object.create({id: 4, label: 'Fax'})\n    Em.Object.create({id: 5, label: 'VOIP'})\n  ]\n\nApp.PhoneStatusesController = App.LookupDataController.extend\n  content: [\n    Em.Object.create({id: 0, label: 'Unknown'})\n    Em.Object.create({id: 1, label: 'Valid'})\n    Em.Object.create({id: 2, label: 'Invalid'})\n    Em.Object.create({id: 3, label: 'New'})\n    Em.Object.create({id: 4, label: 'Valid - Do not call'})\n  ]\n\nApp.SourcesController = App.LookupDataController.extend\n  content: [\n    Em.Object.create({id: 0, label: 'Unknown'})\n    Em.Object.create({id: 1, label: 'Type In'})\n    Em.Object.create({id: 2, label: 'Client'})\n    Em.Object.create({id: 3, label: 'Skip Trance'})\n    Em.Object.create({id: 4, label: 'Consumer Portal'})\n  ]\n\nApp.AssociationsController = App.LookupDataController.extend\n  content: [\n    Em.Object.create({id: '1', label: 'Consumer'})\n    Em.Object.create({id: '2', label: 'Spouse'})\n  ]\n\nApp.EmploymentStatusesController = App.LookupDataController.extend\n  content: [\n    Em.Object.create({id: 1, label: 'Employed'})\n    Em.Object.create({id: 2, label: 'Full Time'})\n    Em.Object.create({id: 3, label: 'Part Time'})\n    Em.Object.create({id: 4, label: 'Unemployed'})\n    Em.Object.create({id: 5, label: 'Other'})\n    Em.Object.create({id: 6, label: 'Self Employed'})\n  ]\n\nApp.CountriesController = App.LookupDataController.extend\n  getObjectByIdStr: (id) ->\n    @get('content').filterProperty('idStr', id).get('firstObject')\n\n  setSelectedByIdStr: (id) ->\n    @set('selected', @getObjectByIdStr(id))\n\n  loaded: (->\n    @set('sortAscending', true)\n  ).observes('@content.isloaded')\n\n\nApp.RelationshipsController = App.LookupDataController.extend\n  getObjectByIdNum: (id) ->\n    @get('content').filterProperty('idNum', id).get('firstObject')\n\n  setSelectedByIdNum: (id) ->\n    @set('selected', @getObjectByIdNum(id))\n    \nApp.ActionCodesController = App.LookupDataController.extend\n  loaded: (->\n    @set('sortAscending', true)\n  ).observes('@content.isloaded')\n\nApp.ResultCodesController = App.LookupDataController.extend\n  loaded: (->\n    @set('sortAscending', true)\n  ).observes('@content.isloaded')\n\n\n\n\n\n\n","App.NoteController = Em.ObjectController.extend\n  needs: [\n    'actionCodes'\n    'resultCodes'\n  ]\n  close: ->\n    @transitionToRoute 'debtor'\n\n  labelActionCode: (->\n    actionCode = @get('controllers.actionCodes').findProperty('id', @get('actionCode'))\n    return null   if actionCode == null || actionCode == undefined\n    actionCode.value\n  ).property('actionCode')","App.NotesController = App.ColumnSorterController.extend\n  columns: (-> [\n    Em.Object.create(column: 'time')\n    Em.Object.create(column: 'actionCode')\n    Em.Object.create(column: 'resultCode')\n    Em.Object.create(column: 'message')\n    Em.Object.create(column: 'user')\n  ]).property()","App.PersonController = App.EditObjectController.extend\n  needs: [\n    'countries'\n    'relationships'\n    'titles'\n    'suffixes'\n  ]\n\n  setSelections: ->\n    @get('controllers.countries').setSelectedByIdStr(@get('country'))\n    @get('controllers.relationships').setSelectedByIdNum(@get('relationship'))\n    @get('controllers.titles').setSelectedById(@get('title'))\n    @get('controllers.suffixes').setSelectedById(@get('suffix'))\n\n  getSelections: ->\n    @set('country', @get('controllers.countries').getSelectedId())\n    @set('relationship', @get('controllers.relationships').getSelectedId())\n    @set('title', @get('controllers.titles').getSelectedId())\n    @set('suffix', @get('controllers.suffixes').getSelectedId())\n\n  relationshipLoaded: (->\n    @get('labelRelationship')\n  ).observes('@controllers.relationships.isLoaded')\n\n  labelRelationship: (->\n    relationship = @get('controllers.relationships.content').findProperty('idNum', @get('relationship'))\n    return null   if relationship == null || relationship == undefined\n    relationship.label\n  ).property('relationship')","App.PersonsController = App.ColumnSorterController.extend\n  needs: [\n    'debtor'\n    'person'\n  ]\n\n  columns: (-> [\n    Em.Object.create(column: 'name')\n    Em.Object.create(column: 'relationship')\n    Em.Object.create(column: 'phone')\n    Em.Object.create(column: 'city')\n    Em.Object.create(column: 'state')\n    Em.Object.create(column: 'comment')\n  ]).property()\n\n  create: ->\n    transaction = @get('store').transaction()\n    @transitionToRoute 'person', transaction.createRecord(App.Person, 'debtor': @get('controllers.debtor').content, 'debtorId': @get('controllers.debtor').content.id)\n\n  delete: (item) ->\n    transaction = @get('store').transaction()\n    transaction.add(item)\n    item.deleteRecord()\n    transaction.commit()","App.DatePicker = Em.TextField.extend\n  classNames: [ 'date-picker' ]\n \n  textToDateTransform: ((key, value) ->\n    if arguments.length == 2\n      if value && /\\d{4}-\\d{2}-\\d{2}/.test(value)\n        parts = value.split '-'\n        date = new Date()\n        date.setYear parts[0]\n        date.setMonth parts[1] - 1\n        date.setDate parts[2]\n \n        @set 'date',  date\n      else\n        @set 'date', null\n    else if !value && @get('date')\n      month =  @get('date').getMonth() + 1\n      date = @get('date').getDate()\n \n      month = \"0#{month}\" if month < 10\n      date = \"0#{date}\" if date < 10\n \n      \"%@-%@-%@\".fmt @get('date').getFullYear(), month, date\n    else\n      value\n  ).property()\n \n  placeholder: \"yyyy-mm-dd\"\n  size: 8\n \n  valueBinding: \"textToDateTransform\"","Em.Handlebars.helper 'titleize', (value, options) ->\n  return value if value is null or value is undefined\n  title = value.replace(/^([a-z])/, (match) ->\n    match.toUpperCase()\n  )\n  escaped = Handlebars.Utils.escapeExpression(title)\n  new Handlebars.SafeString(escaped)\n\nEm.Handlebars.helper 'humanize', (value, options) ->\n  return value if value is null or value is undefined\n  value = value.replace(/([A-Z]+|[0-9]+)/g, \" $1\").replace(/^./, (str) ->\n    str.toUpperCase())\n\n  escaped = Handlebars.Utils.escapeExpression(value)\n  new Handlebars.SafeString(escaped)\n\nEm.Handlebars.helper 'date', (value, options) ->\n  return value if value is null or value is undefined\n  escaped = Handlebars.Utils.escapeExpression(value.toLocaleDateString())\n  new Handlebars.SafeString(escaped)\n\nEm.Handlebars.helper 'currency', (value, options) ->\n  return value if value is null or value is undefined\n  escaped = Handlebars.Utils.escapeExpression('$' + value.toFixed(2))\n  new Handlebars.SafeString(escaped)\n\nEm.Handlebars.helper 'summarize', (value, oprions) ->\n  return value if value is null or value is undefined\n  value = value.substr(0, 255) + ' ...'\n\n  escaped = Handlebars.Utils.escapeExpression(value)\n  new Handlebars.SafeString(escaped)","window.App = require 'app'\n\n#/////////////////////////////////\n#// Helpers\n#/////////////////////////////////\n\nrequire 'helpers/handlebarsHelpers'\n# require 'helpers/datePicker'\n\n#/////////////////////////////////\n#// Controllers\n#/////////////////////////////////\n\nrequire 'controllers/helpers/columnItemController'\nrequire 'controllers/helpers/columnSorterController'\nrequire 'controllers/helpers/editObjectController'\nrequire 'controllers/contactController'\nrequire 'controllers/contactsController'\nrequire 'controllers/debtorController'\nrequire 'controllers/debtorsController'\nrequire 'controllers/indexController'\nrequire 'controllers/personsController'\nrequire 'controllers/personController'\nrequire 'controllers/employmentController'\nrequire 'controllers/employmentsController'\nrequire 'controllers/noteController'\nrequire 'controllers/notesController'\n# require 'controllers/cancellationController'\n\nrequire 'controllers/lookupDataController'\n\n#//////////////////////////////////\n#// Models\n#//////////////////////////////////\n\nrequire 'models/contact'\nrequire 'models/debtor'\nrequire 'models/employment'\nrequire 'models/note'\nrequire 'models/person'\nrequire 'models/relationship'\nrequire 'models/country'\nrequire 'models/phoneTypes'\nrequire 'models/actionCode'\nrequire 'models/resultCode'\n\n#/////////////////////////////////\n#// Routes\n#/////////////////////////////////\n\nrequire 'routes/indexRoute'\nrequire 'routes/debtorRoute'\n# require 'routes/contactRoute'\n# require 'routes/contactsRoute'\n\n#//////////////////////////////////\n#// Templates\n#//////////////////////////////////\n\nrequire 'templates/_well'\nrequire 'templates/about'\nrequire 'templates/application'\nrequire 'templates/contact/_edit'\nrequire 'templates/contact'\nrequire 'templates/contacts'\nrequire 'templates/contactDetail'\nrequire 'templates/debtor/_edit'\nrequire 'templates/debtor'\nrequire 'templates/debtorDetail'\nrequire 'templates/index'\nrequire 'templates/person/_edit'\nrequire 'templates/person'\nrequire 'templates/persons'\nrequire 'templates/employment/_edit'\nrequire 'templates/employment'\nrequire 'templates/employments'\nrequire 'templates/note'\nrequire 'templates/notes'\nrequire 'templates/_cancellation'\nrequire 'templates/modal_layout'\nrequire 'templates/empty'\nrequire 'templates/_confirmation'\n\n#/////////////////////////////////\n#// Views\n#/////////////////////////////////\n\nrequire 'views/debtorsListView'\nrequire 'views/contactsListView'\nrequire 'views/scrollView'\nrequire 'views/datePickerField'\nrequire 'views/modalView'\nrequire 'views/confirmationView'\n\n#/////////////////////////////////\n#// Store\n#/////////////////////////////////\n\n# require 'store/fixtureAdapter'\nrequire 'store/webapi/serializer'\nrequire 'store/webapi/adapter'\nrequire 'store/RESTfulAdapter'\n\n#/////////////////////////////////\n#// Router\n#/////////////////////////////////\n\n# App.Router.reopen(\n#   location: 'history'\n# )\n\nApp.AJAX_LOADER_IMG = \"/images/ajax_loader.gif\"\nApp.DEFAULT_CSS_TRANSITION_DURATION_MS = 250\n\nApp.Router.map ->\n  @route          'index',      path: '/', ->\n  @resource       'debtor',     path: 'debtor/:debtor_id', ->\n    @resource     'contact',    path: 'contact/:contact_id',\n    @resource     'person',     path: 'person/:person_id',\n    @resource     'employment', path: 'employment/:employment_id',\n    @resource     'note',       path: 'note/:note_id'\n\n\n\n","App.ActionCode = DS.Model.extend\n  value:        DS.attr 'string'\n  description:  DS.attr 'string'","App.Cancellation = DS.Model.extend\n  debtorId:       DS.attr 'number'\n  actionCode:     DS.attr 'string'\n  resultCode:     DS.attr 'string'","App.Client = DS.Model.extend\n  description:  DS.attr 'string'\n\n  # debtors:      DS.hasMany 'App.Debtor'","App.Contact = DS.Model.extend\n  type:        \t\tDS.attr 'number'\n  typeLabel:      DS.attr 'string'\n  country:       \tDS.attr 'string'\n  phone:\t\t\t\t\tDS.attr 'string'\n  extension:\t\t  DS.attr 'string'\n  score:\t\t\t\t\tDS.attr 'number'\n  status:         DS.attr 'number'\n  source:         DS.attr 'number'\n  consent:\t      DS.attr 'string'\n  debtorId:       DS.attr 'number'\n  \n  debtor: \t\t\t\tDS.belongsTo 'App.Debtor'","App.Country = DS.Model.extend\n  label: DS.attr 'string'\n\n  idStr: (->\n    @get('id') + ''\n  ).property('id')","App.Debtor = DS.Model.extend\n  type:        \t\t\t\tDS.attr 'string'\n  title:       \t\t\t\tDS.attr 'string'\n  lastName:        \t  DS.attr 'string'\n  firstName:     \t\t\tDS.attr 'string'\n  middleName:         DS.attr 'string'\n  suffix:  \t\t\t\t\t\tDS.attr 'string'\n  dob:\t\t\t\t\t\t\t\tDS.attr 'isodate'\n  ssn:\t\t\t\t\t\t\t\tDS.attr 'string'\n  ein:                DS.attr 'string'\n  martialStatus:\t\t\tDS.attr 'string'\n  email:\t\t\t\t\t\t\tDS.attr 'string'\n  emailValidity:\t\t\tDS.attr 'number'\n  optIn:\t\t\t\t\t\t\tDS.attr 'string'\n  contact:\t          DS.attr 'string'\n\n  country:            DS.attr 'number'\n  address1:           DS.attr 'string'\n  address2:           DS.attr 'string'\n  address3:           DS.attr 'string'\n  city:               DS.attr 'string'\n  state:              DS.attr 'string'\n  zip:                DS.attr 'string'\n  county:             DS.attr 'string'\n  \n  dlIssuer:\t\t\t\t\t\tDS.attr\t'string'\n  dlNumber:\t\t\t\t\t\tDS.attr\t'string'\n  passport:\t\t\t\t\t\tDS.attr\t'string'\n  pin:\t\t\t\t\t\t\t\tDS.attr\t'string'\n\n  contacts: \t\t\t\t\tDS.hasMany 'App.Contact'\n  persons:            DS.hasMany 'App.Person'\n  employments:        DS.hasMany 'App.Employment'\n  notes:              DS.hasMany 'App.Note'\n\n  clientId:           DS.attr 'number'\n\n\n  fullName: (->\n    first   = @get('firstName') || ''\n    middle  = @get('middleName') || ''\n    last    = @get('lastName') || ''\n\n    return first + ' ' + middle + ' ' + last\n  ).property('firstName', 'lastName', 'middleName')\n\n  fullNameWithTitle: (->\n    title   = @get('title') || ''\n    first   = @get('firstName') || ''\n    middle  = @get('middleName') || ''\n    last    = @get('lastName') || ''\n    suffix  = @get('suffix') || ''\n\n    return title + ' ' + first + ' ' + middle + ' ' + last + ' ' + suffix\n  ).property('title', 'firstName', 'lastName', 'middleName', 'suffix')\n\n  fullAddress: (->\n    address1   = @get('address1') || ''\n    address2   = @get('address2') || ''\n    address3   = @get('address3') || ''\n    city       = @get('city') || ''\n    state      = @get('state') || ''\n    zip        = @get('zip') || ''\n\n    return address1 + ' ' + address2 + ' ' + address3 +\n      city + ' ' + state + ' ' + zip\n  ).property(\n    'address1',\n    'address2',\n    'address3',\n    'city',\n    'state',\n    'zip' )","App.Employment = DS.Model.extend\n  association:        DS.attr 'number'\n  name:               DS.attr 'string'\n  monthlyNetIncome:   DS.attr 'number'\n  position:           DS.attr 'string'\n  hireDate:           DS.attr 'isodate'\n  phone:              DS.attr 'string'\n  website:            DS.attr 'string'\n  status:             DS.attr 'number'\n  source:             DS.attr 'number'\n  jobTitle:           DS.attr 'string'\n  terminationDate:    DS.attr 'isodate'\n  yearlyIncome:       DS.attr 'number'\n  monthlyGrossIncome: DS.attr 'number'\n\n  country:            DS.attr 'number'\n  address1:           DS.attr 'string'\n  address2:           DS.attr 'string'\n  address3:           DS.attr 'string'\n  city:               DS.attr 'string'\n  state:              DS.attr 'string'\n  zip:                DS.attr 'string'\n  county:             DS.attr 'string'\n  debtorId:           DS.attr 'number'\n\n  debtor:             DS.belongsTo 'App.Debtor'","App.Note = DS.Model.extend\n  time:           DS.attr 'date'\n  actionCode:     DS.attr 'number'\n  resultCode:     DS.attr 'number'\n  message:        DS.attr 'string'\n  userid:         DS.attr 'number'\n  clientId:       DS.attr 'number'\n  debtorId:       DS.attr 'number'\n\n  debtor:         DS.belongsTo 'App.Debtor'","App.Person = DS.Model.extend\n  relationship:   DS.attr 'number'\n  title:          DS.attr 'string'\n  lastName:       DS.attr 'string'\n  firstName:      DS.attr 'string'\n  middleName:     DS.attr 'string'\n  suffix:         DS.attr 'string'\n  dob:            DS.attr 'date'\n  SSN:            DS.attr 'string'\n  startDate:      DS.attr 'date'\n  endDate:        DS.attr 'date'\n  claimNumber:    DS.attr 'string'\n  phone:          DS.attr 'string'\n\n  country:        DS.attr 'number'\n  address1:       DS.attr 'string'\n  address2:       DS.attr 'string'\n  address3:       DS.attr 'string'\n  city:           DS.attr 'string'\n  state:          DS.attr 'string'\n  zip:            DS.attr 'string'\n  county:         DS.attr 'string'\n  debtorId:       DS.attr 'number'\n\n  debtor:         DS.belongsTo 'App.Debtor'\n\n  fullName: (->\n    first   = @get('firstName') || ''\n    middle  = @get('middleName') || ''\n    last    = @get('lastName') || ''\n\n    return first + ' ' + middle + ' ' + last\n  ).property('firstName', 'lastName', 'middleName')\n\n  fullNameWithTitle: (->\n    title   = @get('title') || ''\n    first   = @get('firstName') || ''\n    middle  = @get('middleName') || ''\n    last    = @get('lastName') || ''\n    suffix  = @get('suffix') || ''\n\n    return title + ' ' + first + ' ' + middle + ' ' + last + ' ' + suffix\n  ).property('title', 'firstName', 'lastName', 'middleName', 'suffix')","App.PhoneTypes = DS.Model.extend\n  label:          DS.attr 'string'","App.Relationship = DS.Model.extend\n  label: DS.attr 'string'\n\n  idNum: (->\n    parseInt(@get('id'))\n  ).property('id')","App.ResultCode = DS.Model.extend\n  value:        DS.attr 'string'\n  description:  DS.attr 'string'","# App.ContactsRoute = Em.Route.extend\n#   events:\n#     # open: (modal) ->\n#     #   console.log 'opening modal from route ' + modal\n#     #   # @render 'contact',\n#     #   #   into: 'debtor'\n#     #   #   outlet: 'modal'\n#     showModal: ->\n#       App.ModalView.create\n#         title: 'My title'\n#         content: 'This is a modal'\n#       .append()\n\n\n# #     close: ->\n# #       console.log 'closing modal'\n# #       # App.animateModalClose().then(->\n# #       #   @render 'empty',\n# #       #     into: 'debtor'\n# #       #     outlet: 'modal'\n# #       # ).bind(this)","# App.ContactsRoute = Em.Route.extend\n#   events:\n#     openModal: ->\n#       @render 'contact',\n#         into: 'debtor'\n#         outlet: 'modal'\n\n#     closeModal: ->\n#       @render 'nothing',\n#         into: 'debtor'\n#         outlet: 'modal'","App.DebtorRoute = Em.Route.extend\n  model: (params) ->\n    App.Debtor.find(params.debtor_id)\n\n  setupController: (controller, model) ->\n    controller.set 'model', model\n    @controllerFor('countries').set 'content', App.Country.find()\n    @controllerFor('relationships').set 'content', App.Relationship.find()\n    @controllerFor('actionCodes').set 'content', App.ActionCode.find()\n    @controllerFor('resultCodes').set 'content', App.ResultCode.find()\n\n  # events:\n  #   openContact: (modal) ->\n  #     console.log 'opening modal with ' + modal\n  #     @render 'contact',\n  #       into: 'debtor'\n  #       outlet: 'modal'\n  #       controller: modal\n\n\n  #   close: ->\n  #     App.animateModalClose().then(->\n  #       @render 'empty',\n  #         into: 'debtor'\n  #         outlet: 'modal'\n\n  #     ).bind(this)","App.IndexRoute = Em.Route.extend\n  setupController: (controller, model) ->\n    controller.set 'model', App.Debtor.find()\n    @controllerFor('countries').set 'content', App.Country.find()\n    @controllerFor('relationships').set 'content', App.Relationship.find()","App.Store = DS.Store.extend\n  adapter:                    DS.WebAPIAdapter.extend\n    url:                      App.serverUrl\n    namespace:                App.serverNamespace\n    bulkCommit:               false,\n    antiForgeryTokenSelector: '#antiForgeryToken'\n\n    plurals:\n      'country': 'countries'\n      'cancellation': 'cancellation'\n\n    pluralize: (name) ->\n      plurals = @get('plurals')\n      (plurals && plurals[name]) || name + 's'\n\n# DS.WebAPIAdapter.map 'App.Client',\n#   debtors:      embedded: 'load'\n\nDS.WebAPIAdapter.map 'App.Debtor',\n  contacts:     embedded: 'load'\n  persons:      embedded: 'load'\n  employments:  embedded: 'load'\n  notes:        embedded: 'load'\n\nDS.WebAPIAdapter.map 'App.Contact',\n  countries:    embedded: 'always'\n\n# DS.WebAPIAdapter.configure 'App.Client',\n#     sideloadAs: 'client',\n#     primaryKey: 'id'\n\nDS.WebAPIAdapter.configure 'App.Debtor',\n    sideloadAs: 'debtor',\n    primaryKey: 'id'\n\nDS.WebAPIAdapter.configure 'App.Contact',\n    sideloadAs: 'contact',\n    primaryKey: 'id'\n\nDS.WebAPIAdapter.configure 'App.Person',\n    sideloadAs: 'person',\n    primaryKey: 'id'\n\nDS.WebAPIAdapter.configure 'App.Employment',\n    sideloadAs: 'employment',\n    primaryKey: 'id'\n\nDS.WebAPIAdapter.configure 'App.Note',\n    sideloadAs: 'note',\n    primaryKey: 'id'\n\nDS.WebAPIAdapter.configure 'App.Country',\n    sideloadAs: 'country',\n    primaryKey: 'id'\n\nDS.WebAPIAdapter.configure 'App.Relationship',\n    sideloadAs: 'relationship',\n    primaryKey: 'id'","App.Store = DS.Store.extend\n  adapter: DS.FixtureAdapter.create()\n\nDS.RESTAdapter.map 'App.Debtor',\n  address: { embedded: 'always' }","#require('ember-data/core')\n#require('ember-data/system/adapter')\n#require('ember-data/adapater/rest_adapter')\n#require('ember-data/serializers/webapi_serializer')\n#global jQuery\n\n\nrejectionHandler = (reason) ->\n  Em.Logger.error reason, reason.message\n  throw reason\n\nget = Em.get\n\nDS.WebAPIAdapter = DS.RESTAdapter.extend\n  serializer: DS.WebAPISerializer\n  antiForgeryTokenSelector: null\n  \n  shouldSave: (record) ->\n    # By default Web API doesn't handle children update from parent.\n    true\n\n  \n  # Delete parent records does not dirty the children records\n  dirtyRecordsForBelongsToChange: null\n  createRecord: (store, type, record) ->\n    root = @rootForType(type)\n    adapter = this\n    data = @serialize(record,\n      includeId: false\n    )\n    \n    # need to remove the primaryKey field\n    config = get(this, 'serializer').configurationForType(type)\n    primaryKey = config and config.primaryKey\n    delete data[primaryKey]  if primaryKey\n\n    @ajax(@buildURL(root),                            'POST',\n      data: data\n    ).then((json) ->\n      adapter.didCreateRecord store, type, record, json\n    , (xhr) ->\n      adapter.didError store, type, record, xhr\n      throw xhr\n    ).then null, rejectionHandler\n\n  updateRecord: (store, type, record) ->\n    id = get(record, 'id')\n    adapter = this\n    root = @rootForType(type)\n    data = @serialize(record,\n      includeId: true\n    )\n\n    @ajax(@buildURL(root, id),                        'PUT',\n      data: data\n    , 'text').then((json) ->\n      adapter.didSaveRecord store, type, record, json\n      record.set 'error', ''\n    , (xhr) ->\n      adapter.didSaveRecord store, type, record\n      record.set 'error', 'Server update failed'\n    ).then null, rejectionHandler\n\n  deleteRecord: (store, type, record) ->\n    id = get(record, 'id')\n    adapter = this\n    root = @rootForType(type)\n    config = get(this, 'serializer').configurationForType(type)\n    primaryKey = config and config.primaryKey\n    \n    # webAPI delete will just return the original record, shouldn't save it back\n    # ignore the returned json object\n    @ajax(@buildURL(root, id),                        'DELETE'\n    ).then((json) ->\n      if json[primaryKey] is id\n        adapter.didSaveRecord store, type, record\n      else\n        adapter.didSaveRecord store, type, record, json\n    , (xhr) ->\n      adapter.didError store, type, record, xhr\n      throw xhr\n    ).then null, rejectionHandler\n\n  ajax: (url, type, hash, dataType) ->\n    adapter = this\n    new Em.RSVP.Promise((resolve, reject) ->\n      hash = hash or {}\n      hash.url = url\n      hash.type = type\n      hash.dataType = 'json' #dataType or 'json'\n      hash.context = adapter\n      if hash.data and type isnt                      'GET'\n        hash.contentType = 'application/json; charset=utf-8'\n        hash.data = JSON.stringify(hash.data)\n      \n      # if antiForgeryTokenSelector attribute exists, pass it in the hearder\n      antiForgeryTokenElemSelector = get(adapter, 'antiForgeryTokenSelector')\n      if antiForgeryTokenElemSelector\n        antiForgeryToken = $(antiForgeryTokenElemSelector).val()\n        hash.headers = RequestVerificationToken: antiForgeryToken  if antiForgeryToken\n      hash.success = (json) ->\n        Em.run null, resolve, json\n\n      hash.error = (jqXHR, textStatus, errorThrown) ->\n        Em.run null, reject, errorThrown\n\n      jQuery.ajax hash\n    )\n\nDS.WebAPIAdapter.registerTransform \"isodate\",\n  deserialize: (serialized) ->\n    serialized\n\n  serialize: (deserialized) ->\n    deserialized\n\n\n","#require('ember-data/serializers/json_serializer')\n\nget = Em.get\n\nDS.WebAPISerializer = DS.JSONSerializer.extend\n  keyForAttributeName: (type, name) ->\n    # do not do decamelize\n    name\n\n  extractMany: (loader, json, type, records) ->\n    root = @rootForType(type)\n    root = @pluralize(root)\n    objects = undefined\n    \n    # detect if returned json is Array\n    if json instanceof Array\n      objects = json\n    else\n      @sideload loader, type, json, root\n      @extractMeta loader, type, json\n      objects = json[root]\n    if objects\n      references = []\n      records = records.toArray()  if records\n      i = 0\n\n      while i < objects.length\n        loader.updateId records[i], objects[i]  if records\n        reference = @extractRecordRepresentation(loader, type, objects[i])\n        references.push reference\n        i++\n      loader.populateArray references\n\n  extract: (loader, json, type, record) ->\n    # don't have json[root] in the returned json data\n    loader.updateId record, json  if record\n    @extractRecordRepresentation loader, type, json\n\n  rootForType: (type) ->\n    typeString = type.toString()\n    Em.assert 'Your model must not be anonymous. It was ' + type, typeString.charAt(0) isnt '('\n    \n    # use the last part of the name as the URL\n    parts = typeString.split('.')\n    name = parts[parts.length - 1]\n    \n    # don't do capital case replacement\n    name.toLowerCase()",".modal\n  .form.form-horizontal\n    .control-group.span6\n      p\n        label.control-label Action Code\n        .controls\n          view  Em.Select    contentBinding='controllers.actionCodes' optionLabelPath='content.value' optionValuePath='content.id' selectionBinding='controllers.actionCodes.selected'\n\n    .control-group.span6\n      p\n        label.control-label Result Code\n        .controls\n          view  Em.Select    contentBinding='controllers.resultCodes' optionLabelPath='content.value' optionValuePath='content.id' selectionBinding='controllers.resultCodes.selected'\n\n    .span4.pull-right\n      p\n        .btn.btn-danger{action sendCancellation} Send Cancellation\n        .btn{action cancellation} Abort","#confirmation-content.modal-dialog style=\"display:none;\"\n  .modal-body\n    | Do you want to delete this record?\n  .modal-footer\n    .btn.btn-small{action deleteItem} Yes\n    .btn.btn-primary.btn-small{action close target='view'} No\n",".well\n  h3 Welcome to the 'Debtor to CRM Project'\n  p This is a partial.\n  p Find me in <code>app/templates/_well.emblem</code>\n\n","h2 About\np Find me in <code>templates/about.emblem</code>\npartial 'well'","/! application\n.container-fluid\n  / .navbar\n  /   .navbar-inner\n  /     linkTo \"index\" class=\"brand\" | Hunter Warfield\n  /     ul.nav\n        / linkTo \"index\" tagName=\"li\"\n        /   a href=\"{{view.href}}\"\n        /     | Home\n        / linkTo \"about\" tagName=\"li\"\n        /   a href=\"{{view.href}}\"\n        /     | About\n\n  #page= outlet\n",".row-fluid\n  partial 'contact/edit'",".modal\n  .modal-header\n    button.close{action cancelEditing} &times;\n    h5 Contact Phone Record\n  .modal-body\n    .form.form-horizontal            \n      .control-group\n        label.control-label Type \n        .controls\n          view  Em.Select    id='phoneTypes' contentBinding='controllers.phoneTypes' optionLabelPath='content.label' optionValuePath='content.id' selectionBinding='controllers.phoneTypes.selected' prompt='Type ...'\n        label.control-label Country\n        .controls\n          view  Em.Select    contentBinding='controllers.countries' optionLabelPath='content.label' optionValuePath='content.id' selectionBinding='controllers.countries.selected' prompt='Country ...'\n        label.control-label Phone\n        .controls\n          view Em.TextField valueBinding='phone' placeholder='Phone'\n        label.control-label Extension\n        .controls\n          view Em.TextField valueBinding='extension' placeholder='Extension'\n        label.control-label Score\n        .controls\n          view Em.TextField valueBinding='score' placeholder='Score'\n        label.control-label Status\n        .controls\n          view  Em.Select    contentBinding='controllers.phoneStatuses' optionLabelPath='content.label' optionValuePath='content.id' selectionBinding='controllers.phoneStatuses.selected' prompt='Status ...'\n        label.control-label Source\n        .controls\n          view  Em.Select    contentBinding='controllers.sources' optionLabelPath='content.label' optionValuePath='content.id' selectionBinding='controllers.sources.selected' prompt='Source ...'\n        label.control-label Consent\n        .controls\n          view  Em.Select    contentBinding='controllers.yesNo' optionLabelPath='content.label' optionValuePath='content.id' selectionBinding='controllers.yesNo.selected' prompt='Consent ...'\n  .modal-footer\n    .btn.btn-success{action 'doneEditing'} Done\n    .btn{action 'cancelEditing'} Cancel",".btn{action delete this} -\n.span2\n  a{action 'openModal' this} href='#'\n    =phone\n.span5\n  =type\n  |  \n  =status\n.span5\n  =extension\nhr","#contacts-area.row-fluid\n  table.table.table-striped.row-border\n    thead\n      tr\n        th\n          .btn.btn-primary.btn-small{action create} +\n        each columns itemController=\"columnItem\"\n          th{action toggleSort column}\n            =humanize column\n            if sortedAsc\n              i class=\"icon-chevron-up\"\n\n            if sortedDesc\n              i class=\"icon-chevron-down\"\n              \n    tbody\n      each controller\n        tr\n          td\n            .btn.btn-small{bindAttr id='id'} -\n            view App.ConfirmationView itemBinding=\"this\"\n          td\n            linkTo 'contact' this\n              =phone\n          td\n            =extension\n          td\n            =labelPhoneType\n          td\n            =labelPhoneStatus","/ .input-append.date.date-picker data-date-format=\"mm-dd-yyyy\"\n/   input type=\"text\"\n/     span.add-on\n/       i.icon-th",".container-fluid\n  .row-fluid\n    .span12\n      address\n        h3\n          =title\n          |  \n          =fullName\n          |  \n          =suffix\n          .span4.pull-right\n            .btn.btn-primary.btn-small{action 'back'} Back\n            if isEditing\n              partial 'debtor/edit'\n            else\n              .btn.btn-small{action 'edit'} Edit\n        h4 =ssn\n        hr\n        .intro\n          .span6\n            p Address\n            h6 \n              =address1\n              br\n              =city\n              |, \n              =state\n              |  \n              =zip\n          .span6\n            p Email\n            h5 =email\n\n        .span4.pull-right\n          .btn.btn-danger.btn-small{action 'cancellation'} Cancel Account\n          .btn.btn-warning.btn-small Hold Account\n          .btn.btn-success.btn-small{action 'makePayment'} Make Payment\n  hr\n\n  #contacts.accordion\n    .accordion-group\n      .accordion-heading\n        a.accordion-toggle data-toggle=\"collapse\" data-parent=\"#contacts\" href=\"#collapseContacts\"\n          h5 Contact Phone Records\n      #collapseContacts.accordion-body.collapse.in\n        .accordion-inner\n          .row-fluid\n            .span12\n              render 'contacts' contacts\n\n  #persons.accordion\n    .accordion-group\n      .accordion-heading\n        a.accordion-toggle data-toggle=\"collapse\" data-parent=\"#persons\" href=\"#collapsePersons\"\n          h5 Related Persons\n      #collapsePersons.accordion-body.collapse.in\n        .accordion-inner\n          .row-fluid\n            .span12\n              render 'persons' persons\n\n  #employments.accordion\n    .accordion-group\n      .accordion-heading\n        a.accordion-toggle data-toggle=\"collapse\" data-parent=\"#employments\" href=\"#collapseEmployments\"\n          h5 Employment Records\n      #collapseEmployments.accordion-body.collapse.in\n        .accordion-inner\n          .row-fluid\n            .span12\n              render 'employments' employments\n\n  #notes.accordion\n    .accordion-group\n      .accordion-heading\n        a.accordion-toggle data-toggle=\"collapse\" data-parent=\"#notes\" href=\"#collapseNotes\"\n          h5 Historical Events\n      #collapseNotes.accordion-body.collapse.in\n        .accordion-inner\n          .row-fluid\n            .span12\n              render 'notes' notes\n\n  if toCancel\n    partial 'cancellation'\n\n  outlet",".modal\n  .modal-header\n    button.close{action cancelEditing} &times;\n    h5 Debtor Record\n  .modal-body\n    .form.form-horizontal\n      .control-group\n        label.control-label Type \n        .controls\n          view  Em.Select    contentBinding='controllers.consumerFlags' optionLabelPath='content.label' optionValuePath='content.id' selectionBinding='controllers.consumerFlags.selected'\n        label.control-label Title\n        .controls      \n          view  Em.Select    contentBinding='controllers.titles' optionLabelPath='content.id' optionValuePath='content.id' selectionBinding='controllers.titles.selected' prompt='Title ...'\n        label.control-label Last Name\n        .controls\n          view  Em.TextField valueBinding='lastName' placeholder='Last Name'\n        label.control-label First Name\n        .controls\n          view  Em.TextField valueBinding='firstName' placeholder='First Name'\n        label.control-label Middle Name\n        .controls\n          view  Em.TextField valueBinding='middleName' placeholder='Middle Name'\n        label.control-label Suffix\n        .controls\n          view  Em.Select    contentBinding='controllers.suffixes' optionLabelPath='content.id' optionValuePath='content.id' selectionBinding='controllers.suffixes.selected' prompt='Suffix ...'\n        label.control-label Date of Birth\n        .controls\n          view App.DatePickerField  valueBinding='dob'\n        label.control-label SSN\n        .controls\n          view  Em.TextField valueBinding='ssn' placeholder='SSN'\n        label.control-label Martial Status\n        .controls\n          view  Em.TextField valueBinding='maritalStatus' placeholder='Martial Status'\n        label.control-label Email\n        .controls\n          view  Em.TextField valueBinding='email' placeholder='Email'\n        label.control-label Email Validity\n        .controls\n          view  Em.Select    contentBinding='controllers.validInvalid' optionLabelPath='content.label' optionValuePath='content.id' selectionBinding='controllers.validInvalid.selected' prompt='Email Validity ...'\n        label.control-label Opt-In\n        .controls\n          view  Em.Select    contentBinding='controllers.yesNo' optionLabelPath='content.label' optionValuePath='content.id' selectionBinding='controllers.yesNo.selected' prompt='Email Opt-in ...'\n        label.control-label Commerical Contact\n        .controls\n          view Em.TextField valueBinding='contact' placeholder='Commerical Contact'\n\n        label.control-label.ms-crm-Field-Normal Country\n        .controls\n          view  Em.Select    contentBinding='controllers.countries' optionLabelPath='content.label' optionValuePath='content.id' selectionBinding='controllers.countries.selected' prompt='Country ...'\n        label.control-label.ms-crm-Field-Normal Address 1\n        .controls\n          view Em.TextField valueBinding='address1' placeholder='Address 1'\n        label.control-label.ms-crm-Field-Normal Address 2\n        .controls\n          view Em.TextField valueBinding='address2' placeholder='Address 2'\n        label.control-label.ms-crm-Field-Normal Address 3 \n        .controls\n          view Em.TextField valueBinding='address3' placeholder='Address 3'\n        label.control-label.ms-crm-Field-Normal City \n        .controls\n          view Em.TextField valueBinding='city' placeholder='City'\n        label.control-label.ms-crm-Field-Normal State \n        .controls\n          view Em.TextField valueBinding='state' placeholder='State'\n        label.control-label.ms-crm-Field-Normal Zip Code \n        .controls\n          view Em.TextField valueBinding='zip' placeholder='Zip code'\n        label.control-label.ms-crm-Field-Normal County \n        .controls\n          view Em.TextField valueBinding='county' placeholder='County'\n        label.control-label.ms-crm-Field-Normal Driver License Issuer \n        .controls\n          view Em.TextField valueBinding='dlIssuer' placeholder='Driver License Issuer'\n        label.control-label.ms-crm-Field-Normal Driver License Number\n        .controls\n          view Em.TextField valueBinding='dlNumber' placeholder='Driver License Number'\n        label.control-label.ms-crm-Field-Normal Passport Number \n        .controls\n          view Em.TextField valueBinding='passport' placeholder='Passport Number'\n        label.control-label.ms-crm-Field-Normal PIN \n        .controls\n          view Em.TextField valueBinding='pin' placeholder='PIN'\n  .modal-footer\n    .btn.btn-success{action 'doneEditing'} Done\n    .btn{action 'cancelEditing'} Cancel",".row\n  .span2\n    linkTo 'debtor' this\n      =id\n  .span4\n    =title\n    |  \n    =fullName\n    |  \n    =suffix\n  .span6\n    / =fullAddress\n    =zip\nhr",".row-fluid\n  partial 'employment/edit'",".modal\n  .modal-header\n    button.close{action cancelEditing} &times;\n    h5 Employment Record\n  .modal-body\n    .form.form-horizontal\n      .control-group\n        label.control-label Relationship \n        .controls\n          view  Em.Select    contentBinding='controllers.associations' optionLabelPath='content.label' optionValuePath='content.id' selectionBinding='controllers.associations.selected' prompt='Relationship ...'\n        label.control-label Employer Name \n        .controls\n          view Em.TextField valueBinding='name' placeholder='Name'\n        label.control-label Position \n        .controls\n          view Em.TextField valueBinding='position' placeholder='Position'\n        label.control-label Hire Date \n        .controls\n          view App.DatePickerField valueBinding='hireDate'\n        label.control-label Termination Date \n        .controls\n          view App.DatePickerField valueBinding='terminationDate'\n        label.control-label Phone \n        .controls\n          view Em.TextField valueBinding='phone' placeholder='Phone'\n        label.control-label Website \n        .controls\n          view Em.TextField valueBinding='website' placeholder='Website'\n        label.control-label Status \n        .controls\n          view  Em.Select    contentBinding='controllers.employmentStatuses' optionLabelPath='content.label' optionValuePath='content.id' selectionBinding='controllers.employmentStatuses.selected' prompt='Employment Status ...'\n        label.control-label Source \n        .controls\n          view  Em.Select    contentBinding='controllers.sources' optionLabelPath='content.label' optionValuePath='content.id' selectionBinding='controllers.sources.selected' prompt='Source ...'\n        label.control-label Job Title \n        .controls\n          view Em.TextField valueBinding='jobTitle' placeholder='Job Title'\n        label.control-label Yearly Income \n        .controls\n          view Em.TextField valueBinding='yearlyIncome' placeholder='Yearly Income'\n        label.control-label Monthly Gross Income \n        .controls\n          view Em.TextField valueBinding='monthlyGrossIncome' placeholder='Monthly Gross Income'\n        label.control-label Monthly Net Income \n        .controls\n          view Em.TextField valueBinding='monthlyNetIncome' placeholder='Monthly Net Income'\n\n        label.control-label Country \n        .controls\n          view  Em.Select    contentBinding='controllers.countries' optionLabelPath='content.label' optionValuePath='content.id' selectionBinding='controllers.countries.selected' prompt='Country ...'\n        label.control-label Address 1 \n        .controls\n          view Em.TextField valueBinding='address1' placeholder='Address 1'\n        label.control-label Address 2 \n        .controls\n          view Em.TextField valueBinding='address2' placeholder='Address 2'\n        label.control-label Address 3 \n        .controls\n          view Em.TextField valueBinding='address3' placeholder='Address 3'\n        label.control-label City \n        .controls\n          view Em.TextField valueBinding='city' placeholder='City'\n        label.control-label State \n        .controls\n          view Em.TextField valueBinding='state' placeholder='State'\n        label.control-label Zip Code \n        .controls\n          view Em.TextField valueBinding='zip' placeholder='Zip'\n        label.control-label County \n        .controls\n          view Em.TextField valueBinding='county' placeholder='County'\n  .modal-footer\n    .btn.btn-success{action 'doneEditing'} Done\n    .btn{action 'cancelEditing'} Cancel",".row-fluid\n  table.table.table-striped.row-border\n    thead\n      tr\n        th\n          .btn.btn-primary{action create} +\n        each columns itemController=\"columnItem\"\n          th{action toggleSort column}\n            =humanize column\n            if sortedAsc\n              i class=\"icon-chevron-up\"\n\n            if sortedDesc\n              i class=\"icon-chevron-down\"\n              \n    tbody\n      each controller itemController=\"employment\"\n        tr\n          td\n            .btn{action delete this} -\n          td\n            linkTo 'employment' this\n              =name\n          td\n            =labelEmploymentStatus\n          td\n            =labelSource\n          td\n            =phone\n          td\n            =jobTitle\n          td\n            =hireDate","",".container-fluid\n  .pull-right\n    .search-query\n      view Em.TextField valueBinding='controller.search' placeholder='filter by Id ...'\n\n.row-fluid.row-border\n  table.table style=\"margin-bottom: 0px;\"\n    thead\n      tr\n        each columns itemController=\"columnItem\"\n          th{action toggleSort column}\n            =humanize label\n            if sortedAsc\n              i class=\"icon-chevron-up\"\n\n            if sortedDesc\n              i class=\"icon-chevron-down\"\n\n\n  .scrollable-500\n    table.table.table-striped\n      tbody\n        each currentContent\n          tr\n            td\n              a href=\"#/debtor/{{unbound id}}\" target=\"_blank\"\n                =id\n            td\n              =fullNameWithTitle\n            td\n              =fullAddress",".modal-backdrop.fade\n  | &nbsp;\n.model.fade\n  =yield",".modal\n  .modal-header\n    button.close{action cancelEditing} &times;\n    h5 =date time\n    .span2\n      p Action Code:\n        {{actionCode}}\n    p Result Code:\n      {{resultCode}}\n\n  .modal-body\n    p\n      =message\n\n  .modal-footer\n    .btn{action 'close'} Close",".row-fluid\n  table.table.table-striped.row-border\n    thead\n      tr\n        each columns itemController=\"columnItem\"\n          th{action toggleSort column}\n            =humanize column\n            if sortedAsc\n              i class=\"icon-chevron-up\"\n\n            if sortedDesc\n              i class=\"icon-chevron-down\"\n\n    tbody\n      each controller itemController=\"note\"\n        tr\n          td\n            linkTo 'note' this\n              date time\n          td\n            .span2\n              =actionCode\n          td\n            .span2\n              =resultCode\n          td\n            summarize message\n          td\n            =user\n\n  hr",".row-fluid\n  partial 'person/edit'",".modal\n  .modal-header\n    button.close{action cancelEditing} &times;\n    h5 Related Person\n  .modal-body\n    .form.form-horizontal\n      .control-group\n        label.control-label Relationship \n        .controls\n          view  Em.Select    contentBinding='controllers.relationships' optionLabelPath='content.label' optionValuePath='content.id' selectionBinding='controllers.relationships.selected' prompt='Relationship ...'\n        label.control-label Title \n        .controls\n          view  Em.Select    contentBinding='controllers.titles' optionLabelPath='content.id' optionValuePath='content.id' selectionBinding='controllers.titles.selected' prompt='Title ...'\n        label.control-label Last Name \n        .controls\n          view Em.TextField valueBinding='lastName' placeholder='Last Name'\n        label.control-label First Name \n        .controls\n          view Em.TextField valueBinding='firstName' placeholder='First Name'\n        label.control-label Middle Name \n        .controls\n          view Em.TextField valueBinding='middleName' placeholder='Middle Name'\n        label.control-label Suffix \n        .controls\n          view  Em.Select    contentBinding='controllers.suffixes' optionLabelPath='content.id' optionValuePath='content.id' selectionBinding='controllers.suffixes.selected' prompt='Suffix ...'\n        label.control-label Date of Birth \n        .controls\n          view App.DatePickerField valueBinding='dob'\n        label.control-label SSN \n        .controls\n          view Em.TextField valueBinding='ssn' placeholder='SSN'\n        label.control-label Relationship Start Date \n        .controls\n          view App.DatePickerField valueBinding='startDate'\n        label.control-label Relationship End Date \n        .controls\n          view App.DatePickerField valueBinding='endDate'\n        label.control-label Claim Number \n        .controls\n          view Em.TextField valueBinding='claimNumber' placeholder='Claim Number'\n        label.control-label Phone \n        .controls\n          view Em.TextField valueBinding='phone' placeholder='Phone'\n\n        label.control-label Country \n        .controls\n          view  Em.Select    contentBinding='controllers.countries' optionLabelPath='content.label' optionValuePath='content.id' selectionBinding='controllers.countries.selected' prompt='Country ...'\n        label.control-label Address 1 \n        .controls\n          view Em.TextField valueBinding='address1' placeholder='Address 1'\n        label.control-label Address 2 \n        .controls\n          view Em.TextField valueBinding='address2' placeholder='Address 2'\n        label.control-label Address 3 \n        .controls\n          view Em.TextField valueBinding='address3' placeholder='Address 3'\n        label.control-label City \n        .controls\n          view Em.TextField valueBinding='city' placeholder='City'\n        label.control-label State \n        .controls\n          view Em.TextField valueBinding='state' placeholder='State'\n        label.control-label Zip Code \n        .controls\n          view Em.TextField valueBinding='zip' placeholder='Zip code'\n        label.control-label County \n        .controls\n          view Em.TextField valueBinding='county' placeholder='County'\n        label.control-label Comment \n        .controls\n          view Em.TextArea valueBinding='comment' placeholder='Comment'\n  .modal-footer\n    .btn.btn-success{action 'doneEditing'} Done\n    .btn{action 'cancelEditing'} Cancel",".row-fluid\n  table.table.table-striped.row-border\n    thead\n      tr\n        th\n          .btn.btn-primary{action create} +\n        each columns itemController=\"columnItem\"\n          th{action toggleSort column}\n            =humanize column\n            if sortedAsc\n              i class=\"icon-chevron-up\"\n\n            if sortedDesc\n              i class=\"icon-chevron-down\"\n\n    tbody\n      each controller itemController=\"person\"\n        tr\n          td\n            .btn{action delete this} -\n          td\n            linkTo 'person' this\n              =fullName\n          td\n            =labelRelationship\n          td\n            =phone\n          td\n            =city\n          td\n            =state\n          td\n            =comment","App.ConfirmationView = Em.View.extend\n  item: null\n  parentSelector: ''\n  contentSelector: '#confirmation-content'\n  templateName: '_confirmation'\n\n  willInsertElement: ->\n    @set('title', @get('controller.id'))\n    @set('id', 'popover' + @get('controller.id'))\n    @set('parentSelector', '#' + @get('controller.id'))\n\n  didInsertElement: ->\n    self = @\n    $(self.parentSelector).popover\n      html: true\n      title: self.title\n      placement: 'right'\n      container: 'body'\n      content: ->\n        $content = $(self.contentSelector).html()\n\n  close: ->\n    self = @\n    $(self.parentSelector).popover 'hide'\n\n  # showWarning: (->\n  #   if @get('controller.showEmailWarning')\n  #     $(@parentSelector).popover 'show'\n  #   else\n  #     $(@parentSelector).popover 'hide'\n\n  # ).observes('controller.showEmailWarning')","# App.ContactView = Bootstrap.ModalPane.popup\n#   heading: 'Sample modal pane'\n#   message: 'Sample message'\n#   primary: 'OK'\n#   secondary: 'Cancel'\n#   showBackdrop: true\n#   callback: (opts, event) ->\n#     if opts.primary\n\n    \n#     # primary button was pressed\n#     else if opts.secondary\n\n    \n#     # secondary button was pressed\n#     else\n#     # close was pressed","App.ContactsListView = Em.ListView.extend\n  height: 200\n  \n  rowHeight: 50\n  \n  itemViewClass: Em.ListItemView.extend\n    templateName: 'contactDetail'\n","App.DatePickerField = Em.TextField.extend\n  classNames: ['date-picker']\n\n  textToDateTransform: ((key, value) ->\n    if arguments.length == 2\n      if value instanceof Date\n        @set 'date', date\n        @close()\n      else if value && /\\d{2}\\/\\d{2}\\/\\d{4}/.test(value)\n        parts = value.split '-'\n        date = new Date()\n        date.setDate parts[0]\n        date.setMonth parts[1] - 1\n        date.setYear parts[2]\n\n        @set 'date',  date\n        @close()\n      else\n        @set 'date', null\n    else if arguments.length == 1 && @get('date')\n      month =  @get('date').getMonth() + 1\n      date = @get('date').getDate()\n\n      month = \"0#{month}\" if month < 10\n      date = \"0#{date}\" if date < 10\n\n      \"%@-%@-%@\".fmt @get('date').getFullYear(), month, date\n  ).property('value')\n\n  format: \"mm/dd/yyyy\"\n  placeholder: Em.computed.alias('format')\n\n  size: 8\n\n  valueBinding: \"textToDateTransform\"\n\n  yesterday: (->\n    date = new Date()\n    date.setDate date.getDate() - 1\n    date\n  ).property()\n\n  didInsertElement: ->\n    @$().datepicker({\n      format: @get('format')\n      autoclose: true\n      todayHighlight: true\n      keyboardNavigation: false\n      # startDate: @get('yesterday') # datepicker is not inclusive\n    }).on 'changeDate', (ev) =>\n      @set('date', ev.date)\n      @$().datepicker('setValue', ev.date)\n\n  close: ->\n    @$().datepicker('hide')","App.DebtorsListView = Em.ListView.extend\n  init: ->\n    @_super()\n    view = @\n    $(window).on 'resize', ->\n      Em.run.debounce(view, 'resize', 150)\n\n  resize: ->\n    @set('height', $(window).height() - 200)\n\n  height: $(window).height() - 90\n  \n  rowHeight: 50\n  \n  itemViewClass: Em.ListItemView.extend\n    templateName: 'debtorDetail'\n","# App.ModalView = Em.View.extend\n#   didInsertElement: ->\n#     @$('.modal, .modal-backdrop').addClass 'in'\n\n#   layoutName: 'modal_layout'\n#   close: ->\n#     view = this\n    \n#     # use one of: transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd\n#     # events so the handler is only fired once in your browser\n#     @$('.modal').one 'transitionend', (ev) ->\n#       view.controller.send 'close'\n\n#     @$('.modal, .modal-backdrop').removeClass 'in'\n\nApp.ModalView = Ember.View.extend\n  templateName: 'modal'\n  title: ''\n  content: ''\n  classNames: ['modal', 'fade', 'hide']\n  didInsertElement: ->\n    @$().modal 'show'\n    @$().one 'hidden', @_viewDidHide\n\n  \n  # modal dismissed by example clicked in X, make sure the modal view is destroyed\n  _viewDidHide: ->\n    @destroy()  unless @isDestroyed\n\n  \n  # here we click in close button so _viewDidHide is called\n  close: ->\n    @$('.close').click()","# App.ScrollView = Em.View.extend\n#   attributeBinding: [\n#     'height'\n#     'auto-scroll'\n#     'overflow-y'\n#   ]\n\n#   overflow-y: auto\n\n#   height: 500"]}
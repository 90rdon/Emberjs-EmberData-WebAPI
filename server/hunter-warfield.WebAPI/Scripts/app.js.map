{"version":3,"file":"server/hunter-warfield.WebAPI/Scripts/app.js","sources":["app/app.coffee","app/controllers/columnItemController.coffee","app/controllers/debtorController.coffee","app/controllers/debtorsController.coffee","app/helpers/handlebarsHelpers.coffee","app/helpers/radioButton.coffee","app/initialize.coffee","app/models/contact.coffee","app/models/debtor.coffee","app/models/debtorData.coffee","app/models/employment.coffee","app/models/historicalEvent.coffee","app/models/oldData.coffee","app/models/relatedPerson.coffee","app/routes/debtorRoute.coffee","app/routes/debtorsRoute.coffee","app/routes/indexRoute.coffee","app/store/RESTfulAdapter.coffee","app/store/fixtureAdapter.coffee","app/store/webapi/adapter.coffee","app/store/webapi/serializer.coffee"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AACA;AACA;AACA;AAHA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzCA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7BA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7DA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9BA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzDA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxtBA;;ACAA;AAAA;AACA;AADA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/GA;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApDA","sourcesContent":["# Application bootstrapper\n\nmodule.exports = Em.Application.create\n  LOG_TRANSITIONS: true\n","App.ColumnItemController = Em.ObjectController.extend\n  sortColumn:\n    Em.computed.alias('parentController.sortedColumn')\n  \n  sortAscending:\n    Em.computed.alias('parentController.sortAscending')\n  \n  sortDescending:\n    Em.computed.not('sortAscending')\n  \n  isSorted: (->\n    @get('sortColumn') is @get('column')\n  ).property('sortColumn', 'column')\n  \n  sortedAsc:\n    Em.computed.and('sortAscending', 'isSorted')\n  \n  sortedDesc:\n    Em.computed.and('sortDescending', 'isSorted')\n\n\n\n","App.DebtorController = Em.ObjectController.extend\n  fullName: (->\n    first   = @get('firstName') || ''\n    middle  = @get('middleName') || ''\n    last    = @get('lastName') || ''\n\n    # return first + ' ' + last   unless middle\n    return first + ' ' + middle + ' ' + last\n  ).property('firstName', 'lastName', 'middleName')\n\n  isEditing: false\n\n  emailv: false\n\n  doneEditing: ->\n    @set('isEditing', false)\n    @get('store').commit()\n\n  edit: ->\n    @set('isEditing', true)","App.DebtorsController = Em.ArrayController.extend\n  sortedColumn: (->\n    properties = @get('sortProperties')\n    return 'undefined'  unless properties\n    return properties.get 'firstObject'\n  ).property('sortProperties.[]')\n\n  columns: (-> [\n    Em.Object.create(column: 'id')\n    Em.Object.create(column: 'firstName')\n    Em.Object.create(column: 'middleName')\n    Em.Object.create(column: 'lastName')\n    Em.Object.create(column: 'address1')\n    Em.Object.create(column: 'address2')\n    Em.Object.create(column: 'city')\n    Em.Object.create(column: 'state')\n    Em.Object.create(column: 'zip')\n  ]).property()\n\n  toggleSort: (column) ->\n    if @get('sortedColumn') is column\n      @toggleProperty 'sortAscending'\n    else\n      @set('sortProperties', [column])\n      @set('sortAscending', true)","Em.Handlebars.helper 'titleize', (value, options) ->\n  title = value.replace(/^([a-z])/, (match) ->\n    match.toUpperCase()\n  )\n  escaped = Handlebars.Utils.escapeExpression(title)\n  new Handlebars.SafeString(escaped)\n\nEm.Handlebars.helper 'humanize', (value, options) ->\n  value = value.replace(/([A-Z]+|[0-9]+)/g, \" $1\").replace(/^./, (str) ->\n    str.toUpperCase())\n\n  escaped = Handlebars.Utils.escapeExpression(value)\n  new Handlebars.SafeString(escaped)\n\nEm.Handlebars.helper 'date', (value, options) ->\n  escaped = Handlebars.Utils.escapeExpression(value.toLocaleDateString())\n  new Handlebars.SafeString(escaped)\n\nEm.Handlebars.helper 'currency', (value, options) ->\n  escaped = Handlebars.Utils.escapeExpression('$' + value.toFixed(2))\n  new Handlebars.SafeString(escaped)\n","((exports) ->\n  Em.RadioButton = Em.View.extend\n    tagName:            'input'\n    type:               'radio'\n    attributeBindings:  [ 'name', 'type', 'value', 'checked:checked:' ]\n    click: ->\n      @set 'selection', @$().val()\n\n    checked: (->\n      @get('value') is @get('selection')\n    ).property()\n) {}","window.App = require 'app'\n\n#/////////////////////////////////\n#// Helpers\n#/////////////////////////////////\n\nrequire 'helpers/handlebarsHelpers'\nrequire 'helpers/radioButton'\n\n#/////////////////////////////////\n#// Controllers\n#/////////////////////////////////\n\nrequire 'controllers/debtorsController'\nrequire 'controllers/debtorController'\nrequire 'controllers/columnItemController'\n\n#//////////////////////////////////\n#// Models\n#//////////////////////////////////\n\nrequire 'models/debtor'\nrequire 'models/contact'\nrequire 'models/relatedPerson'\nrequire 'models/employment'\nrequire 'models/historicalEvent'\n# require 'models/debtorData'\n\n#/////////////////////////////////\n#// Routes\n#/////////////////////////////////\n\nrequire 'routes/indexRoute'\nrequire 'routes/debtorsRoute'\nrequire 'routes/debtorRoute'\n\n#//////////////////////////////////\n#// Templates\n#//////////////////////////////////\n\nrequire 'templates/application'\nrequire 'templates/index'\nrequire 'templates/about'\nrequire 'templates/_well'\nrequire 'templates/debtors'\nrequire 'templates/debtor'\nrequire 'templates/debtor/_edit'\n\n#/////////////////////////////////\n#// Views\n#/////////////////////////////////\n\n\n\n#/////////////////////////////////\n#// Store\n#/////////////////////////////////\n\n# require 'store/fixtureAdapter'\nrequire 'store/webapi/adapter'\nrequire 'store/webapi/serializer'\nrequire 'store/RESTfulAdapter'\n\n#/////////////////////////////////\n#// Router\n#/////////////////////////////////\n\n# App.Router.reopen(\n#   location: 'history'\n# )\n\nApp.Router.map ->\n  @route 'about', path: '/about'\n  @route 'index', path: '/'\n  @resource   'debtors', () ->\n    @resource 'debtor', path: ':debtor_id'\n","App.Contact = DS.Model.extend\n  type:        \t\tDS.attr 'string'\n  country:       \tDS.attr 'string'\n  phone:\t\t\t\t\tDS.attr 'string'\n  phoneExt:\t\t\t\tDS.attr 'string'\n  score:\t\t\t\t\tDS.attr 'number'\n  consentToCall:\tDS.attr 'boolean'\n  \n  debtor: \t\t\t\tDS.belongsTo 'App.Debtor'","App.Debtor = DS.Model.extend\n  type:        \t\t\t\tDS.attr 'boolean'\n  title:       \t\t\t\tDS.attr 'string'\n  lastName:        \t  DS.attr 'string'\n  firstName:     \t\t\tDS.attr 'string'\n  middleName:         DS.attr 'string'\n  suffix:  \t\t\t\t\t\tDS.attr 'string'\n  dob:\t\t\t\t\t\t\t\tDS.attr 'date'\n  ssn:\t\t\t\t\t\t\t\tDS.attr 'string'\n  martialStatus:\t\t\tDS.attr 'string'\n  email:\t\t\t\t\t\t\tDS.attr 'string'\n  emailValidity:\t\t\tDS.attr 'boolean'\n  optIn:\t\t\t\t\t\t\tDS.attr 'boolean'\n  # ein:\t\t\t\t\t\t\t\tDS.attr 'string'\n  commContact:\t          DS.attr 'string'\n\n  country:            DS.attr 'string'\n  address1:           DS.attr 'string'\n  address2:           DS.attr 'string'\n  address3:           DS.attr 'string'\n  city:               DS.attr 'string'\n  state:              DS.attr 'string'\n  zip:                DS.attr 'string'\n  county:             DS.attr 'string'\n  \n  dlIssuer:\t\t\t\t\t\tDS.attr\t'string'\n  dlNumber:\t\t\t\t\t\tDS.attr\t'string'\n  passport:\t\t\t\t\t\tDS.attr\t'string'\n  pin:\t\t\t\t\t\t\t\tDS.attr\t'string'\n\n  contact: \t\t\t\t\t\tDS.hasMany    'App.Contact'\n  relatedPerson:      DS.hasMany    'App.RelatedPerson'\n  employment:         DS.hasMany    'App.Employment'","App.Debtor.FIXTURES = [\n  {\n    \"id\": 4103752,\n    \"type\": \"N\",\n    \"title\": null,\n    \"firstName\": \"Joseph\",\n    \"middleName\": \"\",\n    \"lastName\": \"Best\",\n    \"suffix\": null,\n    \"dob\": null,\n    \"ssn\": null,\n    \"maritalStatus\": 0,\n    \"email\": null,\n    \"emailValidity\": null,\n    \"optIn\": null,\n    \"commContact\": null,\n    \"country\": 231,\n    \"address1\": \"4420 Green Wood\",\n    \"address2\": null,\n    \"address3\": null,\n    \"city\": \"Shreveport\",\n    \"state\": \"LA\",\n    \"zip\": \"71109\",\n    \"county\": null,\n    \"dlIssuer\": null,\n    \"dlNumber\": null,\n    \"passport\": null,\n    \"pin\": \"0263\"\n  },\n  {\n    \"id\": 4103753,\n    \"type\": \"N\",\n    \"title\": null,\n    \"firstName\": \"Jennifer\",\n    \"middleName\": null,\n    \"lastName\": \"Scneeweis\",\n    \"suffix\": null,\n    \"dob\": null,\n    \"ssn\": null,\n    \"maritalStatus\": 0,\n    \"email\": null,\n    \"emailValidity\": null,\n    \"optIn\": null,\n    \"commContact\": null,\n    \"country\": 231,\n    \"address1\": \"1815 N 45Th St Ste 218\",\n    \"address2\": null,\n    \"address3\": null,\n    \"city\": \"Seattle\",\n    \"state\": \"WA\",\n    \"zip\": \"98103\",\n    \"county\": null,\n    \"dlIssuer\": null,\n    \"dlNumber\": null,\n    \"passport\": null,\n    \"pin\": \"6685\"\n  }\n]","App.Employment = DS.Model.extend\n  relationship:       DS.attr 'string'\n  name:               DS.attr 'string'\n  monthlyNetIncome:   DS.attr 'number'\n  position:           DS.attr 'string'\n  hireDate:           DS.attr 'date'\n  phone:              DS.attr 'string'\n  website:            DS.attr 'string'\n  status:             DS.attr 'string'\n  source:             DS.attr 'string'\n  jobTitle:           DS.attr 'string'\n  terminationDate:    DS.attr 'date'\n  yearlyIncome:       DS.attr 'number'\n  monthlyGrossIncome: DS.attr 'number'\n\n  country:            DS.attr 'string'\n  address1:           DS.attr 'string'\n  address2:           DS.attr 'string'\n  address3:           DS.attr 'string'\n  city:               DS.attr 'string'\n  state:              DS.attr 'string'\n  zip:                DS.attr 'string'\n  county:             DS.attr 'string'\n\n  debtor:             DS.belongsTo 'App.Debtor'","App.HistoricalEvent = DS.Model.extend\n  time:       DS.attr 'date'\n  actionCode: DS.attr 'string'\n  resultCode: DS.attr 'string'\n  user:       DS.attr 'string'\n  message:    DS.attr 'string'","App.Debtor.FIXTURES = [\n  id: 123456\n  type: 'consumer'\n  title: 'Mr.'\n  lastName: 'Obama'\n  firstName: 'Barack'\n  dob: '8/4/1961'\n  ssn: '123-45-6789'\n  martialStatus: 'M'\n  email: 'barackobama@sample.com'\n  emailValidity: true\n  optIn: true\n  country: 'United States'\n  address1: '1600 Pennsylvania Ave NW'\n  city: 'Washington'\n  state: 'DC'\n  zip: '20500'\n,\n  id: 234567\n  type: 'consumer'\n  title: 'Mrs.'\n  lastName: 'Deen'\n  firstName: 'Paula'\n  dob: '4/13/1950'\n  ssn: '321-45-9876'\n  martialStatus: 'M'\n  email: 'paula@sample.com'\n  emailValidity: true\n  optIn: true\n  country: 'United States'\n  address1: '2391 Downing Ave'\n  city: 'Thunderbolt'\n  state: 'GA'\n  zip: '31404'\n,\n  id: 456789\n  type: 'consumer'\n  title: 'Mr.'\n  lastName: 'Bush'\n  middleName: 'W.'\n  firstName: 'George'\n  dob: '7/6/1946'\n  ssn: '555-44-6666'\n  martialStatus: 'M'\n  email: 'gwb@sample.com'\n  emailValidity: false\n  optIn: true\n  country: 'United States'\n  address1: 'P.O. Box 259000'\n  city: 'Dallas'\n  state: 'TX'\n  zip: '75225'\n,\n  id: 567890\n  type: 'consumer'\n  title: 'Mr.'\n  lastName: 'Bush'\n  middleName: 'H.W.'\n  firstName: 'George'\n  dob: '6/12/1924'\n  ssn: '727-12-3434'\n  martialStatus: 'M'\n  email: 'georgesrb@sample.com'\n  emailValidity: false\n  optIn: true\n  country: 'United States'\n  address1: '10000 Memorial Dr.'\n  address2: 'Suite 900'\n  city: 'Houston'\n  state: 'TX'\n  zip: '77024'\n,\n  id: 345678\n  type: 'consumer'\n  title: 'Mr.'\n  lastName: 'Clinton'\n  firstName: 'Bill'\n  dob: '8/16/1946'\n  ssn: '456-77-0000'\n  martialStatus: 'M'\n  email: 'billclinton@sample.com'\n  emailValidity: true\n  optIn: true\n  country: 'United States'\n  address1: '55 West 125th Street'\n  city: 'New York'\n  state: 'NY'\n  zip: '10027'\n]","App.RelatedPerson = DS.Model.extend\n  relationship:   DS.attr 'string'\n  title:          DS.attr 'string'\n  last:           DS.attr 'string'\n  first:          DS.attr 'string'\n  middle:         DS.attr 'string'\n  suffix:         DS.attr 'string'\n  dob:            DS.attr 'date'\n  SSN:            DS.attr 'string'\n  startDate:      DS.attr 'date'\n  claimNumber:    DS.attr 'string'\n  source:         DS.attr 'string'\n\n  country:        DS.attr 'string'\n  address1:       DS.attr 'string'\n  address2:       DS.attr 'string'\n  address3:       DS.attr 'string'\n  city:           DS.attr 'string'\n  state:          DS.attr 'string'\n  zip:            DS.attr 'string'\n  county:         DS.attr 'string'\n\n  debtor:         DS.belongsTo 'App.Debtor'","App.DebtorRoute = Em.Route.extend()","App.DebtorsRoute = Em.Route.extend\n  model: ->\n    App.Debtor.find()","App.IndexRoute = Em.Route.extend\n  redirect: ->\n    @transitionTo 'debtors'","# DS.WebAPIAdapter.map 'App.Debtor',\n  \n#   # Web API server is not handling reference update/delete, so use 'load' instead of 'always'\n#   address:\n#     embedded: 'always'\n\n\n# serializer = DS.WebAPISerializer\n# serializer.configure 'App.Debtor',\n#   sideloadAs: 'todoList'\n#   primaryKey: 'todoListId'\n\n# serializer.configure 'App.Todo',\n#   sideloadAs: 'todo'\n#   primaryKey: 'todoItemId'\n\nApp.Store = DS.Store.extend\n  # adapter: DS.WebAPIAdapter.create()\n  adapter: DS.RESTAdapter.extend\n    url: 'http://localhost'\n    namespace: 'hunter-warfield.WebAPI/api'\n    bulkCommit: false\n    serializer: DS.WebAPISerializer\n    plurals:\n      debtor: 'debtors'","App.Store = DS.Store.extend\n  adapter: DS.FixtureAdapter.create()\n\nDS.RESTAdapter.map 'App.Debtor',\n  address: { embedded: 'always' }","#require('ember-data/core')\n#require('ember-data/system/adapter')\n#require('ember-data/adapater/rest_adapter')\n#require('ember-data/serializers/webapi_serializer')\n#global jQuery\n\n\nrejectionHandler = (reason) ->\n  Em.Logger.error reason, reason.message\n  throw reason\n\nget = Em.get\n\nDS.WebAPIAdapter = DS.RESTAdapter.extend\n  url: 'http://192.168.1.123'\n  namespace: 'hunter-warfield.WebAPI/api'\n  bulkCommit: false\n  antiForgeryTokenSelector: '#antiForgeryToken'\n  # serializer: DS.WebAPISerializer\n  # antiForgeryTokenSelector: null\n  \n  shouldSave: (record) ->\n    # By default Web API doesn't handle children update from parent.\n    true\n\n  \n  # Delete parent records does not dirty the children records\n  dirtyRecordsForBelongsToChange: null\n  createRecord: (store, type, record) ->\n    root = @rootForType(type)\n    adapter = this\n    data = @serialize(record,\n      includeId: false\n    )\n    \n    # need to remove the primaryKey field\n    config = get(this, 'serializer').configurationForType(type)\n    primaryKey = config and config.primaryKey\n    delete data[primaryKey]  if primaryKey\n    @ajax(@buildURL(root), 'POST',\n      data: data\n    ).then((json) ->\n      adapter.didCreateRecord store, type, record, json\n    , (xhr) ->\n      adapter.didError store, type, record, xhr\n      throw xhr\n    ).then null, rejectionHandler\n\n  updateRecord: (store, type, record) ->\n    id = get(record, 'id')\n    adapter = this\n    root = @rootForType(type)\n    data = @serialize(record,\n      includeId: true\n    )\n    @ajax(@buildURL(root, id), 'PUT',\n      data: data\n    , 'text').then((json) ->\n      adapter.didSaveRecord store, type, record, json\n      record.set 'error', ''\n    , (xhr) ->\n      adapter.didSaveRecord store, type, record\n      record.set 'error', 'Server update failed'\n    ).then null, rejectionHandler\n\n  deleteRecord: (store, type, record) ->\n    id = get(record, 'id')\n    adapter = this\n    root = @rootForType(type)\n    config = get(this, 'serializer').configurationForType(type)\n    primaryKey = config and config.primaryKey\n    \n    # webAPI delete will just return the original record, shouldn't save it back\n    # ignore the returned json object\n    @ajax(@buildURL(root, id), 'DELETE').then((json) ->\n      if json[primaryKey] is id\n        adapter.didSaveRecord store, type, record\n      else\n        adapter.didSaveRecord store, type, record, json\n    , (xhr) ->\n      adapter.didError store, type, record, xhr\n      throw xhr\n    ).then null, rejectionHandler\n\n  ajax: (url, type, hash, dataType) ->\n    adapter = this\n    new Em.RSVP.Promise((resolve, reject) ->\n      hash = hash or {}\n      hash.url = url\n      hash.type = type\n      hash.dataType = 'jsonp' #dataType or 'json'\n      hash.context = adapter\n      if hash.data and type isnt 'GET'\n        hash.contentType = 'application/json; charset=utf-8'\n        hash.data = JSON.stringify(hash.data)\n      \n      # if antiForgeryTokenSelector attribute exists, pass it in the hearder\n      antiForgeryTokenElemSelector = get(adapter, 'antiForgeryTokenSelector')\n      if antiForgeryTokenElemSelector\n        antiForgeryToken = $(antiForgeryTokenElemSelector).val()\n        hash.headers = RequestVerificationToken: antiForgeryToken  if antiForgeryToken\n      hash.success = (json) ->\n        Em.run null, resolve, json\n\n      hash.error = (jqXHR, textStatus, errorThrown) ->\n        Em.run null, reject, errorThrown\n\n      jQuery.ajax hash\n    )\n\n  plurals:\n    debtor: 'debtors'\n\n  # pluralize: (string) ->\n  #   string\n\n\n\n","#require('ember-data/serializers/json_serializer')\n\nget = Em.get\n\nDS.WebAPISerializer = DS.JSONSerializer.extend\n  keyForAttributeName: (type, name) ->\n    # do not do decamelize\n    name\n\n  extractMany: (loader, json, type, records) ->\n    root = @rootForType(type)\n    root = @pluralize(root)\n    objects = undefined\n    \n    # detect if returned json is Array\n    if json instanceof Array\n      objects = json\n    else\n      @sideload loader, type, json, root\n      @extractMeta loader, type, json\n      objects = json[root]\n    if objects\n      references = []\n      records = records.toArray()  if records\n      i = 0\n\n      while i < objects.length\n        loader.updateId records[i], objects[i]  if records\n        reference = @extractRecordRepresentation(loader, type, objects[i])\n        references.push reference\n        i++\n      loader.populateArray references\n\n  extract: (loader, json, type, record) ->\n    # don't have json[root] in the returned json data\n    loader.updateId record, json  if record\n    @extractRecordRepresentation loader, type, json\n\n  rootForType: (type) ->\n    typeString = type.toString()\n    Em.assert 'Your model must not be anonymous. It was ' + type, typeString.charAt(0) isnt '('\n    \n    # use the last part of the name as the URL\n    parts = typeString.split('.')\n    name = parts[parts.length - 1]\n    \n    # don't do capital case replacement\n    name.toLowerCase()"]}